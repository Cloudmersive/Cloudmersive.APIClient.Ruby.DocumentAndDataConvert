=begin
#convertapi

#Convert API lets you effortlessly convert file formats and types.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveConvertApiClient::EditDocumentApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EditDocumentApi' do
  before do
    # run before each test
    @instance = CloudmersiveConvertApiClient::EditDocumentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EditDocumentApi' do
    it 'should create an instance of EditDocumentApi' do
      expect(@instance).to be_instance_of(CloudmersiveConvertApiClient::EditDocumentApi)
    end
  end

  # unit tests for edit_document_begin_editing
  # Begin editing a document
  # Uploads a document to Cloudmersive to begin a series of one or more editing operations.  To edit a document, first call Begin Editing on the document.  Then perform operations on the document using the secure URL returned from BeginEditing, such as Word DOCX Delete Pages and Insert Table.  Finally, perform finish editing on the URL to return the resulting edited document.  The editing URL is temporary and only stored in-memory cache, and will automatically expire from the cache after 30 minutes, and cannot be directly accessed.
  # @param input_file Input file to perform the operation on.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_begin_editing test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_body
  # Get body from a Word DOCX document
  # Returns the body defined in the Word Document (DOCX) format file; this is the main content part of a DOCX document
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxBodyResponse]
  describe 'edit_document_docx_body test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_create_blank_document
  # Create a blank Word DOCX document
  # Returns a blank Word DOCX Document format file.  The file is blank, with no contents.  Use additional editing commands such as Insert Paragraph or Insert Table or Insert Image to populate the document.
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [CreateBlankDocxResponse]
  describe 'edit_document_docx_create_blank_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_delete_pages
  # Delete, remove pages from a Word DOCX document
  # Returns the edited Word Document in the Word Document (DOCX) format file with the specified pages removed
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_docx_delete_pages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_delete_table_row
  # Deletes a table row in an existing table in a Word DOCX document
  # Deletes an existing table row in a Word DOCX Document and returns the result.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DeleteDocxTableRowResponse]
  describe 'edit_document_docx_delete_table_row test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_delete_table_row_range
  # Deletes a range of multiple table rows in an existing table in a Word DOCX document
  # Deletes a range of 1 or more existing table rows in a Word DOCX Document and returns the result.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DeleteDocxTableRowRangeResponse]
  describe 'edit_document_docx_delete_table_row_range test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_comments
  # Get comments from a Word DOCX document as a flat list
  # Returns the comments and review annotations stored in the Word Document (DOCX) format file as a flattened list (not as a hierarchy of comments and replies).
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxCommentsResponse]
  describe 'edit_document_docx_get_comments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_comments_hierarchical
  # Get comments from a Word DOCX document hierarchically
  # Returns the comments and review annotations stored in the Word Document (DOCX) format file hierarchically, where reply comments are nested as children under top-level comments in the results returned.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxCommentsHierarchicalResponse]
  describe 'edit_document_docx_get_comments_hierarchical test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_headers_and_footers
  # Get content of a footer from a Word DOCX document
  # Returns the footer content from a Word Document (DOCX) format file
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxHeadersAndFootersResponse]
  describe 'edit_document_docx_get_headers_and_footers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_images
  # Get images from a Word DOCX document
  # Returns the images defined in the Word Document (DOCX) format file
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxImagesResponse]
  describe 'edit_document_docx_get_images test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_sections
  # Get sections from a Word DOCX document
  # Returns the sections defined in the Word Document (DOCX) format file
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxSectionsResponse]
  describe 'edit_document_docx_get_sections test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_styles
  # Get styles from a Word DOCX document
  # Returns the styles defined in the Word Document (DOCX) format file
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxStylesResponse]
  describe 'edit_document_docx_get_styles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_table_by_index
  # Get a specific table by index in a Word DOCX document
  # Returns the specific table object by its 0-based index in an Office Word Document (DOCX)
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxTableByIndexResponse]
  describe 'edit_document_docx_get_table_by_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_table_row
  # Gets the contents of an existing table row in an existing table in a Word DOCX document
  # Gets the contents of an existing table row in a Word DOCX Document and returns the result.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxTableRowResponse]
  describe 'edit_document_docx_get_table_row test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_tables
  # Get all tables in Word DOCX document
  # Returns all the table objects in an Office Word Document (docx)
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxTablesResponse]
  describe 'edit_document_docx_get_tables test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_comment_on_paragraph
  # Insert a new comment into a Word DOCX document attached to a paragraph
  # Adds a new comment into a Word DOCX document attached to a paragraph and returns the result.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [InsertDocxCommentOnParagraphResponse]
  describe 'edit_document_docx_insert_comment_on_paragraph test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_image
  # Insert image into a Word DOCX document
  # Set the footer in a Word Document (DOCX).  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DocxInsertImageResponse]
  describe 'edit_document_docx_insert_image test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_paragraph
  # Insert a new paragraph into a Word DOCX document
  # Adds a new paragraph into a DOCX and returns the result.  You can insert at the beginning/end of a document, or before/after an existing object using its Path (location within the document).  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [InsertDocxInsertParagraphResponse]
  describe 'edit_document_docx_insert_paragraph test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_table
  # Insert a new table into a Word DOCX document
  # Adds a new table into a DOCX and returns the result.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [InsertDocxTablesResponse]
  describe 'edit_document_docx_insert_table test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_table_row
  # Insert a new row into an existing table in a Word DOCX document
  # Adds a new table row into a DOCX Document and returns the result.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [InsertDocxTableRowResponse]
  describe 'edit_document_docx_insert_table_row test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_pages
  # Get pages and content from a Word DOCX document
  # Returns the pages and contents of each page defined in the Word Document (DOCX) format file
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetDocxPagesResponse]
  describe 'edit_document_docx_pages test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_remove_headers_and_footers
  # Remove headers and footers from Word DOCX document
  # Remove all headers, or footers, or both from a Word Document (DOCX).  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [RemoveDocxHeadersAndFootersResponse]
  describe 'edit_document_docx_remove_headers_and_footers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_remove_object
  # Delete any object in a Word DOCX document
  # Delete any object, such as a paragraph, table, image, etc. from a Word Document (DOCX).  Pass in the Path of the object you would like to delete.  You can call other functions such as Get-Tables, Get-Images, Get-Body, etc. to get the paths of the objects in the document.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DocxRemoveObjectResponse]
  describe 'edit_document_docx_remove_object test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_replace
  # Replace string in Word DOCX document
  # Replace all instances of a string in an Office Word Document (docx)
  # @param req_config Document string replacement configuration input
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_docx_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_set_footer
  # Set the footer in a Word DOCX document
  # Set the footer in a Word Document (DOCX).  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DocxSetFooterResponse]
  describe 'edit_document_docx_set_footer test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_set_footer_add_page_number
  # Add page number to footer in a Word DOCX document
  # Set the footer in a Word Document (DOCX) to contain a page number.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DocxSetFooterResponse]
  describe 'edit_document_docx_set_footer_add_page_number test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_set_header
  # Set the header in a Word DOCX document
  # Set the header in a Word Document (DOCX).  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [DocxSetHeaderResponse]
  describe 'edit_document_docx_set_header test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_update_table_cell
  # Update, set contents of a table cell in an existing table in a Word DOCX document
  # Sets the contents of a table cell into a DOCX Document and returns the result.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [UpdateDocxTableCellResponse]
  describe 'edit_document_docx_update_table_cell test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_update_table_row
  # Update, set contents of a table row in an existing table in a Word DOCX document
  # Sets the contents of a table row into a DOCX Document and returns the result.  Call Finish Editing on the output URL to complete the operation.
  # @param req_config Document input request
  # @param [Hash] opts the optional parameters
  # @return [UpdateDocxTableRowResponse]
  describe 'edit_document_docx_update_table_row test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_finish_editing
  # Finish editing document, and download result from document editing
  # Once done editing a document, download the result.  Begin editing a document by calling begin-editing, then perform operations, then call finish-editing to get the result.
  # @param req_config Cloudmersive Document URL to complete editing on
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_finish_editing test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_pptx_delete_slides
  # Delete, remove slides from a PowerPoint PPTX presentation document
  # Edits the input PowerPoint PPTX presentation document to remove the specified slides
  # @param req_config Presentation input request
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_pptx_delete_slides test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_pptx_replace
  # Replace string in PowerPoint PPTX presentation
  # Replace all instances of a string in an Office PowerPoint Document (pptx)
  # @param req_config Replacement document configuration input
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_pptx_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_clear_cell_by_index
  # Clear cell contents in an Excel XLSX spreadsheet, worksheet by index
  # Clears, sets to blank, the contents of a specific cell in an Excel XLSX spreadsheet, worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [ClearXlsxCellResponse]
  describe 'edit_document_xlsx_clear_cell_by_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_create_blank_spreadsheet
  # Create a blank Excel XLSX spreadsheet
  # Returns a blank Excel XLSX Spreadsheet (XLSX) format file
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [CreateBlankSpreadsheetResponse]
  describe 'edit_document_xlsx_create_blank_spreadsheet test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_create_spreadsheet_from_data
  # Create a new Excel XLSX spreadsheet from column and row data
  # Returns a new Excel XLSX Spreadsheet (XLSX) format file populated with column and row data specified as input
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [CreateSpreadsheetFromDataResponse]
  describe 'edit_document_xlsx_create_spreadsheet_from_data test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_delete_worksheet
  # Delete, remove worksheet from an Excel XLSX spreadsheet document
  # Edits the input Excel XLSX spreadsheet document to remove the specified worksheet (tab).  Use the Get Worksheets API to enumerate available worksheets in a spreadsheet.
  # @param req_config Spreadsheet input request
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'edit_document_xlsx_delete_worksheet test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_disable_shared_workbook
  # Disable Shared Workbook (legacy) in Excel XLSX spreadsheet
  # Disable the Shared Workbook (legacy) mode in an Excel XLSX spreadsheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [DisableSharedWorkbookResponse]
  describe 'edit_document_xlsx_disable_shared_workbook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_enable_shared_workbook
  # Enable Shared Workbook (legacy) in Excel XLSX spreadsheet
  # Enables the Shared Workbook (legacy) mode in an Excel XLSX spreadsheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [EnableSharedWorkbookResponse]
  describe 'edit_document_xlsx_enable_shared_workbook test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_cell_by_identifier
  # Get cell from an Excel XLSX spreadsheet, worksheet by cell identifier
  # Returns the value of a specific cell based on its identifier (e.g. A1, B22, C33, etc.) in the Excel Spreadsheet worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxCellByIdentifierResponse]
  describe 'edit_document_xlsx_get_cell_by_identifier test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_cell_by_index
  # Get cell from an Excel XLSX spreadsheet, worksheet by index
  # Returns the value and definition of a specific cell in a specific row in the Excel Spreadsheet worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxCellResponse]
  describe 'edit_document_xlsx_get_cell_by_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_columns
  # Get columns from a Excel XLSX spreadsheet, worksheet
  # Returns the columns defined in the Excel Spreadsheet worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxColumnsResponse]
  describe 'edit_document_xlsx_get_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_images
  # Get images from a Excel XLSX spreadsheet, worksheet
  # Returns the images defined in the Excel Spreadsheet worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxImagesResponse]
  describe 'edit_document_xlsx_get_images test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_rows_and_cells
  # Get rows and cells from a Excel XLSX spreadsheet, worksheet
  # Returns the rows and cells defined in the Excel Spreadsheet worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxRowsAndCellsResponse]
  describe 'edit_document_xlsx_get_rows_and_cells test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_styles
  # Get styles from a Excel XLSX spreadsheet, worksheet
  # Returns the style defined in the Excel Spreadsheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxStylesResponse]
  describe 'edit_document_xlsx_get_styles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_get_worksheets
  # Get worksheets from a Excel XLSX spreadsheet
  # Returns the worksheets (tabs) defined in the Excel Spreadsheet (XLSX) format file
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [GetXlsxWorksheetsResponse]
  describe 'edit_document_xlsx_get_worksheets test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_insert_worksheet
  # Insert a new worksheet into an Excel XLSX spreadsheet
  # Inserts a new worksheet into an Excel Spreadsheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [InsertXlsxWorksheetResponse]
  describe 'edit_document_xlsx_insert_worksheet test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_set_cell_by_identifier
  # Set, update cell contents in an Excel XLSX spreadsheet, worksheet by cell identifier
  # Sets, updates the contents of a specific cell in an Excel XLSX spreadsheet, worksheet using its cell identifier (e.g. A1, B22, C33) in the worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [SetXlsxCellByIdentifierResponse]
  describe 'edit_document_xlsx_set_cell_by_identifier test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_xlsx_set_cell_by_index
  # Set, update cell contents in an Excel XLSX spreadsheet, worksheet by index
  # Sets, updates the contents of a specific cell in an Excel XLSX spreadsheet, worksheet
  # @param input Document input request
  # @param [Hash] opts the optional parameters
  # @return [SetXlsxCellResponse]
  describe 'edit_document_xlsx_set_cell_by_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
