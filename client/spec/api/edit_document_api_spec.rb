=begin
#convertapi

#Convert API lets you effortlessly convert file formats and types.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveConvertApiClient::EditDocumentApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EditDocumentApi' do
  before do
    # run before each test
    @instance = CloudmersiveConvertApiClient::EditDocumentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EditDocumentApi' do
    it 'should create an instance of EditDocumentApi' do
      expect(@instance).to be_instance_of(CloudmersiveConvertApiClient::EditDocumentApi)
    end
  end

  # unit tests for edit_document_begin_editing
  # Begin editing a document
  # Uploads a document to Cloudmersive to begin a series of one or more editing operations
  # @param input_file Input file to perform the operation on.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_begin_editing test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_headers_and_footers
  # Get content of a footer from a DOCX
  # Returns the footer content from a Word Document (DOCX) format file
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [GetDocxHeadersAndFootersResponse]
  describe 'edit_document_docx_get_headers_and_footers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_styles
  # Get styles from a DOCX
  # Returns the styles defined in the Word Document (DOCX) format file
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [GetDocxStylesResponse]
  describe 'edit_document_docx_get_styles test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_get_tables
  # Get tables in DOCX
  # Returns all the table objects in an Office Word Document (docx)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [GetDocxTablesResponse]
  describe 'edit_document_docx_get_tables test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_image
  # Insert image into a DOCX
  # Set the footer in a Word Document (DOCX)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [DocxInsertImageResponse]
  describe 'edit_document_docx_insert_image test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_insert_table
  # Insert a new table into a DOCX
  # Adds a new table into a DOCX and returns the result
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [InsertDocxTablesResponse]
  describe 'edit_document_docx_insert_table test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_remove_headers_and_footers
  # Remove headers and footers from DOCX
  # Remove all headers, or footers, or both from a Word Document (DOCX)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [RemoveDocxHeadersAndFootersResponse]
  describe 'edit_document_docx_remove_headers_and_footers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_replace
  # Replace string in DOCX
  # Replace all instances of a string in an Office Word Document (docx)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_docx_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_set_footer
  # Set the footer in a DOCX
  # Set the footer in a Word Document (DOCX)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [DocxSetFooterResponse]
  describe 'edit_document_docx_set_footer test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_docx_set_header
  # Set the header in a DOCX
  # Set the header in a Word Document (DOCX)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [DocxSetHeaderResponse]
  describe 'edit_document_docx_set_header test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_finish_editing
  # Download result from document editing
  # Once done editing a document, download the result.  Begin editing a document by calling begin-editing, then perform operations, then call finish-editing to get the result.
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_finish_editing test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_document_pptx_replace
  # Replace string in PPTX
  # Replace all instances of a string in an Office PowerPoint Document (pptx)
  # @param req_config 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'edit_document_pptx_replace test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
