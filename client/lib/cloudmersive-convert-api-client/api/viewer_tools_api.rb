=begin
#convertapi

#Convert API lets you effortlessly convert file formats and types.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'uri'

module CloudmersiveConvertApiClient
  class ViewerToolsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a web-based viewer
    # Creates an HTML embed code for a simple web-based viewer of a document; supports Office document types and PDF.
    # @param input_file Input file to perform the operation on.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :width Optional; width of the output viewer in pixels
    # @option opts [Integer] :height Optional; height of the output viewer in pixels
    # @return [ViewerResponse]
    def viewer_tools_create_simple(input_file, opts = {})
      data, _status_code, _headers = viewer_tools_create_simple_with_http_info(input_file, opts)
      data
    end

    # Create a web-based viewer
    # Creates an HTML embed code for a simple web-based viewer of a document; supports Office document types and PDF.
    # @param input_file Input file to perform the operation on.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :width Optional; width of the output viewer in pixels
    # @option opts [Integer] :height Optional; height of the output viewer in pixels
    # @return [Array<(ViewerResponse, Fixnum, Hash)>] ViewerResponse data, response status code and response headers
    def viewer_tools_create_simple_with_http_info(input_file, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ViewerToolsApi.viewer_tools_create_simple ...'
      end
      # verify the required parameter 'input_file' is set
      if @api_client.config.client_side_validation && input_file.nil?
        fail ArgumentError, "Missing the required parameter 'input_file' when calling ViewerToolsApi.viewer_tools_create_simple"
      end
      # resource path
      local_var_path = '/convert/viewer/create/web/simple'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data'])
      header_params[:'width'] = opts[:'width'] if !opts[:'width'].nil?
      header_params[:'height'] = opts[:'height'] if !opts[:'height'].nil?

      # form parameters
      form_params = {}
      form_params['inputFile'] = input_file

      # http body (model)
      post_body = nil
      auth_names = ['Apikey']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ViewerResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ViewerToolsApi#viewer_tools_create_simple\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
