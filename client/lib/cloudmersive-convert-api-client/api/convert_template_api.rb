=begin
#convertapi

#Convert API lets you effortlessly convert file formats and types.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require "uri"

module CloudmersiveConvertApiClient
  class ConvertTemplateApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Apply HTML template
    # Apply operations to fill in an HTML template, generating a final HTML result
    # @param value Operations to apply to template
    # @param [Hash] opts the optional parameters
    # @return [HtmlTemplateApplicationResponse]
    def convert_template_apply_html_template(value, opts = {})
      data, _status_code, _headers = convert_template_apply_html_template_with_http_info(value, opts)
      return data
    end

    # Apply HTML template
    # Apply operations to fill in an HTML template, generating a final HTML result
    # @param value Operations to apply to template
    # @param [Hash] opts the optional parameters
    # @return [Array<(HtmlTemplateApplicationResponse, Fixnum, Hash)>] HtmlTemplateApplicationResponse data, response status code and response headers
    def convert_template_apply_html_template_with_http_info(value, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ConvertTemplateApi.convert_template_apply_html_template ..."
      end
      # verify the required parameter 'value' is set
      if @api_client.config.client_side_validation && value.nil?
        fail ArgumentError, "Missing the required parameter 'value' when calling ConvertTemplateApi.convert_template_apply_html_template"
      end
      # resource path
      local_var_path = "/convert/template/html/apply"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(value)
      auth_names = ['Apikey']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'HtmlTemplateApplicationResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ConvertTemplateApi#convert_template_apply_html_template\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
